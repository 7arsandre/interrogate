{"ast":null,"code":"var _jsxFileName = \"/Users/larsandre/Projects/interrogate/src/App.js\";\nimport React, { useState } from 'react';\nimport logo from './assets/images/kahoot_messenger.png';\nimport './App.css';\nimport ReactExport from \"react-export-excel\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nfunction App() {\n  const [kahootQuestions, setKahootQuestions] = useState(false);\n\n  const handleUploadFile = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      const contents = e.target.result;\n      fetch('http://0.0.0.0:8000/interrogate', {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: contents\n        })\n      }).then(response => response.json()).then(json => {\n        setKahootQuestions(json);\n        window.document.getElementById('downloadButton').click();\n      }).catch(error => {\n        console.error(error);\n      });\n    };\n\n    reader.readAsText(file);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-file-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"file-upload\",\n    className: \"custom-file-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-cloud-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), \" Click here to upload Messenger data\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-file-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"file-upload\",\n    type: \"file\",\n    onChange: handleUploadFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  })), kahootQuestions && /*#__PURE__*/React.createElement(ExcelFile, {\n    filename: \"KahootQuiz\",\n    element: /*#__PURE__*/React.createElement(\"div\", {\n      id: \"downloadButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 60\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExcelSheet, {\n    data: kahootQuestions,\n    name: \"Organization\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Question - max 120 characters\",\n    value: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Answer 1 - max 75 characters\",\n    value: \"answer1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Answer 2 - max 75 characters\",\n    value: \"answer2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Answer 3 - max 75 characters\",\n    value: \"answer3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Answer 4 - max 75 characters\",\n    value: \"answer4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Time limit (sec) \\u2013 5, 10, 20, 30, 60, 90, 120, or 240 secs\",\n    value: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Correct answer(s) - choose at least one\",\n    value: \"correct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/larsandre/Projects/interrogate/src/App.js"],"names":["React","useState","logo","ReactExport","ExcelFile","ExcelSheet","ExcelColumn","App","kahootQuestions","setKahootQuestions","handleUploadFile","event","file","target","files","reader","FileReader","onload","e","contents","result","fetch","method","headers","body","JSON","stringify","data","then","response","json","window","document","getElementById","click","catch","error","console","readAsText"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport logo from './assets/images/kahoot_messenger.png'\nimport './App.css';\n\nimport ReactExport from \"react-export-excel\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nfunction App() {\n\n  const [ kahootQuestions, setKahootQuestions ] = useState(false)\n\n  const handleUploadFile = (event) =>{\n    const file = event.target.files[0]\n\n    const reader = new FileReader();\n    reader.onload = function(e) {\n      const contents = e.target.result;\n\n\n      fetch('http://0.0.0.0:8000/interrogate', {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify(({\n          data: contents\n        }))\n      })\n      .then((response) => response.json())\n      .then((json) => {\n        setKahootQuestions(json)\n        window.document.getElementById('downloadButton').click()\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n\n    };\n    reader.readAsText(file);\n  }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <div className=\"container-file-upload\">\n          <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\n          <i className=\"fa fa-cloud-upload\"></i> Click here to upload Messenger data\n          </label>\n            </div>\n            <div className=\"container-file-upload\">\n              <input id=\"file-upload\" type=\"file\" onChange={handleUploadFile}/>\n            </div>\n            {kahootQuestions &&\n              <ExcelFile  filename={\"KahootQuiz\"} element={<div id='downloadButton'></div>}>\n                <ExcelSheet data={kahootQuestions} name=\"Organization\">\n                  <ExcelColumn label=\"Question - max 120 characters\" value=\"question\"/>\n                  <ExcelColumn label=\"Answer 1 - max 75 characters\" value=\"answer1\"/>\n                  <ExcelColumn label=\"Answer 2 - max 75 characters\" value=\"answer2\"/>\n                  <ExcelColumn label=\"Answer 3 - max 75 characters\" value=\"answer3\"/>\n                  <ExcelColumn label=\"Answer 4 - max 75 characters\" value=\"answer4\"/>\n                  <ExcelColumn label=\"Time limit (sec) – 5, 10, 20, 30, 60, 90, 120, or 240 secs\" value=\"time\"/>\n                  <ExcelColumn label=\"Correct answer(s) - choose at least one\" value=\"correct\"/>\n                </ExcelSheet>\n              </ExcelFile>\n        }\n        </header>\n      </div>\n    );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}