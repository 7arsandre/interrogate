{"ast":null,"code":"var _jsxFileName = \"/Users/larsandre/Projects/interrogate/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ReactExport from \"react-export-excel\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\nconst dataSet1 = [{\n  name: \"Johson\",\n  amount: 30000,\n  sex: 'M',\n  is_married: true\n}, {\n  name: \"Monika\",\n  amount: 355000,\n  sex: 'F',\n  is_married: false\n}, {\n  name: \"John\",\n  amount: 250000,\n  sex: 'M',\n  is_married: false\n}, {\n  name: \"Josef\",\n  amount: 450500,\n  sex: 'M',\n  is_married: true\n}];\n\nclass Download extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(ExcelFile, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \" element=\", /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 32\n      }\n    }, \"Download Data\"), \">\", /*#__PURE__*/React.createElement(ExcelSheet, {\n      data: dataSet1,\n      name: \"Employees\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ExcelColumn, {\n      label: \"Question - max 120 characters\",\n      value: \"question\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ExcelColumn, {\n      label: \"Answer 1 - max 75 characters\",\n      value: \"answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ExcelColumn, {\n      label: \"Answer 2 - max 75 characters\",\n      value: \"answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ExcelColumn, {\n      label: \"Answer 3 - max 75 characters\",\n      value: \"answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ExcelColumn, {\n      label: \"Answer 4 - max 75 characters\",\n      value: \"answer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ExcelColumn, {\n      label: \"Time limit (sec) \\u2013 5, 10, 20, 30, 60, 90, 120, or 240 secs\",\n      value: \"time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(ExcelColumn, {\n      label: \"Correct answer(s) - choose at least one\",\n      value: \"correct\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }\n    })));\n  }\n\n}\n\nconst obj_json = {\n  a: 123,\n  b: \"4 5 6\"\n};\nconst data_json = \"text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(obj_json));\n\nfunction App() {\n  const [headerName, setHeaderName] = useState('');\n  useEffect(() => {\n    fetch('http://0.0.0.0:8000/').then(response => response.json()).then(json => {\n      console.log(json);\n      setHeaderName(json.Hello);\n    }).catch(error => {\n      console.error(error);\n    });\n  });\n\n  const handleUploadFile = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      const contents = e.target.result;\n      console.log('cont ', contents);\n      fetch('http://0.0.0.0:8000/interrogate', {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: contents\n        })\n      });\n    };\n\n    reader.readAsText(file);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, \"Edit \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 16\n    }\n  }, \"src/App.js\"), \" and save to reload.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, headerName), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleUploadFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"a\", {\n    className: \"App-link\",\n    href: \"https://reactjs.org\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, \"Learn React\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/larsandre/Projects/interrogate/src/App.js"],"names":["React","useEffect","useState","ReactExport","ExcelFile","ExcelSheet","ExcelColumn","dataSet1","name","amount","sex","is_married","Download","Component","render","obj_json","a","b","data_json","encodeURIComponent","JSON","stringify","App","headerName","setHeaderName","fetch","then","response","json","console","log","Hello","catch","error","handleUploadFile","event","file","target","files","reader","FileReader","onload","e","contents","result","method","headers","body","data","readAsText","logo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,OAAO,WAAP;AAEA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAACC,SAA9B;AACA,MAAMC,UAAU,GAAGF,WAAW,CAACC,SAAZ,CAAsBC,UAAzC;AACA,MAAMC,WAAW,GAAGH,WAAW,CAACC,SAAZ,CAAsBE,WAA1C;AAEA,MAAMC,QAAQ,GAAG,CACf;AACIC,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,MAAM,EAAE,KAFZ;AAGIC,EAAAA,GAAG,EAAE,GAHT;AAIIC,EAAAA,UAAU,EAAE;AAJhB,CADe,EAOf;AACIH,EAAAA,IAAI,EAAE,QADV;AAEIC,EAAAA,MAAM,EAAE,MAFZ;AAGIC,EAAAA,GAAG,EAAE,GAHT;AAIIC,EAAAA,UAAU,EAAE;AAJhB,CAPe,EAaf;AACIH,EAAAA,IAAI,EAAE,MADV;AAEIC,EAAAA,MAAM,EAAE,MAFZ;AAGIC,EAAAA,GAAG,EAAE,GAHT;AAIIC,EAAAA,UAAU,EAAE;AAJhB,CAbe,EAmBf;AACIH,EAAAA,IAAI,EAAE,OADV;AAEIC,EAAAA,MAAM,EAAE,MAFZ;AAGIC,EAAAA,GAAG,EAAE,GAHT;AAIIC,EAAAA,UAAU,EAAE;AAJhB,CAnBe,CAAjB;;AA2BA,MAAMC,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AACrCC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAArB,oBACI,oBAAC,UAAD;AAAY,MAAA,IAAI,EAAEP,QAAlB;AAA4B,MAAA,IAAI,EAAC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,+BAAnB;AAAmD,MAAA,KAAK,EAAC,UAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,8BAAnB;AAAkD,MAAA,KAAK,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,8BAAnB;AAAkD,MAAA,KAAK,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,8BAAnB;AAAkD,MAAA,KAAK,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,8BAAnB;AAAkD,MAAA,KAAK,EAAC,QAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAMI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,iEAAnB;AAAgF,MAAA,KAAK,EAAC,MAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAOI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAC,yCAAnB;AAA6D,MAAA,KAAK,EAAC,SAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,CADJ,CADJ;AAcH;;AAhBoC;;AAmBvC,MAAMQ,QAAQ,GAAG;AAACC,EAAAA,CAAC,EAAE,GAAJ;AAASC,EAAAA,CAAC,EAAE;AAAZ,CAAjB;AACA,MAAMC,SAAS,GAAG,6BAA6BC,kBAAkB,CAACC,IAAI,CAACC,SAAL,CAAeN,QAAf,CAAD,CAAjE;;AAEA,SAASO,GAAT,GAAe;AACb,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCtB,QAAQ,CAAC,EAAD,CAA9C;AACAD,EAAAA,SAAS,CAAC,MAAK;AACbwB,IAAAA,KAAK,CAAC,sBAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOE,IAAD,IAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAJ,MAAAA,aAAa,CAACI,IAAI,CAACG,KAAN,CAAb;AACD,KALD,EAMCC,KAND,CAMQC,KAAD,IAAW;AAChBJ,MAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACD,KARD;AASD,GAVQ,CAAT;;AAWA,QAAMC,gBAAgB,GAAIC,KAAD,IAAU;AACjC,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AAEA,UAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAASC,CAAT,EAAY;AAC1B,YAAMC,QAAQ,GAAGD,CAAC,CAACL,MAAF,CAASO,MAA1B;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBa,QAArB;AAEAlB,MAAAA,KAAK,CAAC,iCAAD,EAAoC;AACvCoB,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT,SAF8B;AAMvCC,QAAAA,IAAI,EAAE3B,IAAI,CAACC,SAAL,CAAgB;AACpB2B,UAAAA,IAAI,EAAEL;AADc,SAAhB;AANiC,OAApC,CAAL;AAUD,KAdD;;AAeAJ,IAAAA,MAAM,CAACU,UAAP,CAAkBb,IAAlB;AAED,GArBD;;AAuBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEc,IAAV;AAAgB,IAAA,SAAS,EAAC,UAA1B;AAAqC,IAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,yBAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG3B,UADH,CALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAkB,IAAA,QAAQ,EAAEW,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,eAWE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,IAAI,EAAC,qBAFP;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAXF,CADF,CADF;AAwBD;;AAED,eAAeZ,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport ReactExport from \"react-export-excel\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst dataSet1 = [\n  {\n      name: \"Johson\",\n      amount: 30000,\n      sex: 'M',\n      is_married: true\n  },\n  {\n      name: \"Monika\",\n      amount: 355000,\n      sex: 'F',\n      is_married: false\n  },\n  {\n      name: \"John\",\n      amount: 250000,\n      sex: 'M',\n      is_married: false\n  },\n  {\n      name: \"Josef\",\n      amount: 450500,\n      sex: 'M',\n      is_married: true\n  }\n];\n\nclass Download extends React.Component {\n  render() {\n      return (\n          <ExcelFile> element={<button>Download Data</button>}>\n              <ExcelSheet data={dataSet1} name=\"Employees\">\n                  <ExcelColumn label=\"Question - max 120 characters\" value=\"question\"/>\n                  <ExcelColumn label=\"Answer 1 - max 75 characters\" value=\"answer\"/>\n                  <ExcelColumn label=\"Answer 2 - max 75 characters\" value=\"answer\"/>\n                  <ExcelColumn label=\"Answer 3 - max 75 characters\" value=\"answer\"/>\n                  <ExcelColumn label=\"Answer 4 - max 75 characters\" value=\"answer\"/>\n                  <ExcelColumn label=\"Time limit (sec) – 5, 10, 20, 30, 60, 90, 120, or 240 secs\" value=\"time\"/>\n                  <ExcelColumn label=\"Correct answer(s) - choose at least one\" value=\"correct\"/>\n              </ExcelSheet>\n\n          </ExcelFile>\n      );\n  }\n}\n\nconst obj_json = {a: 123, b: \"4 5 6\"};\nconst data_json = \"text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(obj_json));\n\nfunction App() {\n  const [ headerName, setHeaderName ] = useState('')\n  useEffect(()=> {\n    fetch('http://0.0.0.0:8000/')\n    .then((response) => response.json())\n    .then((json) => {\n      console.log(json);\n      setHeaderName(json.Hello)\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  })\n  const handleUploadFile = (event) =>{\n    const file = event.target.files[0]\n\n    const reader = new FileReader();\n    reader.onload = function(e) {\n      const contents = e.target.result;\n      console.log('cont ', contents);\n\n      fetch('http://0.0.0.0:8000/interrogate', {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify(({\n          data: contents\n        }))\n      })\n    };\n    reader.readAsText(file);\n\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <p>\n          {headerName}\n        </p>\n        <div>\n          <input type='file'onChange={handleUploadFile}/>\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}