{"ast":null,"code":"import _slicedToArray from\"/Users/larsandre/Projects/interrogate/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import logo from'./assets/images/kahoot_messenger.png';import'./App.css';import ReactExport from\"react-export-excel\";var ExcelFile=ReactExport.ExcelFile;var ExcelSheet=ReactExport.ExcelFile.ExcelSheet;var ExcelColumn=ReactExport.ExcelFile.ExcelColumn;function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),kahootQuestions=_useState2[0],setKahootQuestions=_useState2[1];var handleUploadFile=function handleUploadFile(event){var file=event.target.files[0];var reader=new FileReader();reader.onload=function(e){var contents=e.target.result;fetch('http://0.0.0.0:8000/interrogate',{method:'POST',headers:{'accept':'application/json','content-type':'application/json'},body:JSON.stringify({data:contents})}).then(function(response){return response.json();}).then(function(json){setKahootQuestions(json);window.document.getElementById('downloadButton').click();}).catch(function(error){console.error(error);});};reader.readAsText(file);};return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"header\",{className:\"App-header\"},/*#__PURE__*/React.createElement(\"img\",{src:logo,className:\"App-logo\",alt:\"logo\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"container-file-upload\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"file-upload\",className:\"custom-file-upload\"},/*#__PURE__*/React.createElement(\"i\",{className:\"fa fa-cloud-upload\"}),\" Click here to upload Messenger data\")),/*#__PURE__*/React.createElement(\"div\",{className:\"container-file-upload\"},/*#__PURE__*/React.createElement(\"input\",{id:\"file-upload\",type:\"file\",onChange:handleUploadFile})),kahootQuestions&&/*#__PURE__*/React.createElement(ExcelFile,{filename:\"KahootQuiz\",element:/*#__PURE__*/React.createElement(\"div\",{id:\"downloadButton\"})},/*#__PURE__*/React.createElement(ExcelSheet,{data:kahootQuestions,name:\"Organization\"},/*#__PURE__*/React.createElement(ExcelColumn,{label:\"Question - max 120 characters\",value:\"question\"}),/*#__PURE__*/React.createElement(ExcelColumn,{label:\"Answer 1 - max 75 characters\",value:\"answer1\"}),/*#__PURE__*/React.createElement(ExcelColumn,{label:\"Answer 2 - max 75 characters\",value:\"answer2\"}),/*#__PURE__*/React.createElement(ExcelColumn,{label:\"Answer 3 - max 75 characters\",value:\"answer3\"}),/*#__PURE__*/React.createElement(ExcelColumn,{label:\"Answer 4 - max 75 characters\",value:\"answer4\"}),/*#__PURE__*/React.createElement(ExcelColumn,{label:\"Time limit (sec) \\u2013 5, 10, 20, 30, 60, 90, 120, or 240 secs\",value:\"time\"}),/*#__PURE__*/React.createElement(ExcelColumn,{label:\"Correct answer(s) - choose at least one\",value:\"correct\"})))));}export default App;","map":{"version":3,"sources":["/Users/larsandre/Projects/interrogate/src/App.js"],"names":["React","useState","logo","ReactExport","ExcelFile","ExcelSheet","ExcelColumn","App","kahootQuestions","setKahootQuestions","handleUploadFile","event","file","target","files","reader","FileReader","onload","e","contents","result","fetch","method","headers","body","JSON","stringify","data","then","response","json","window","document","getElementById","click","catch","error","console","readAsText"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport logo from './assets/images/kahoot_messenger.png'\nimport './App.css';\n\nimport ReactExport from \"react-export-excel\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nfunction App() {\n\n  const [ kahootQuestions, setKahootQuestions ] = useState(false)\n\n  const handleUploadFile = (event) =>{\n    const file = event.target.files[0]\n\n    const reader = new FileReader();\n    reader.onload = function(e) {\n      const contents = e.target.result;\n\n\n      fetch('http://0.0.0.0:8000/interrogate', {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify(({\n          data: contents\n        }))\n      })\n      .then((response) => response.json())\n      .then((json) => {\n        setKahootQuestions(json)\n        window.document.getElementById('downloadButton').click()\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n\n    };\n    reader.readAsText(file);\n  }\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n            <div className=\"container-file-upload\">\n          <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\n          <i className=\"fa fa-cloud-upload\"></i> Click here to upload Messenger data\n          </label>\n            </div>\n            <div className=\"container-file-upload\">\n              <input id=\"file-upload\" type=\"file\" onChange={handleUploadFile}/>\n            </div>\n            {kahootQuestions &&\n              <ExcelFile  filename={\"KahootQuiz\"} element={<div id='downloadButton'></div>}>\n                <ExcelSheet data={kahootQuestions} name=\"Organization\">\n                  <ExcelColumn label=\"Question - max 120 characters\" value=\"question\"/>\n                  <ExcelColumn label=\"Answer 1 - max 75 characters\" value=\"answer1\"/>\n                  <ExcelColumn label=\"Answer 2 - max 75 characters\" value=\"answer2\"/>\n                  <ExcelColumn label=\"Answer 3 - max 75 characters\" value=\"answer3\"/>\n                  <ExcelColumn label=\"Answer 4 - max 75 characters\" value=\"answer4\"/>\n                  <ExcelColumn label=\"Time limit (sec) â€“ 5, 10, 20, 30, 60, 90, 120, or 240 secs\" value=\"time\"/>\n                  <ExcelColumn label=\"Correct answer(s) - choose at least one\" value=\"correct\"/>\n                </ExcelSheet>\n              </ExcelFile>\n        }\n        </header>\n      </div>\n    );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}