{"ast":null,"code":"var _jsxFileName = \"/Users/larsandre/Projects/interrogate/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport logo from './assets/images/kahoot_messenger.png';\nimport './App.css';\nimport ReactExport from \"react-export-excel\";\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\nconst dataSet1 = [{\n  question: \"Josef\",\n  time: 20,\n  answer1: 'M',\n  answer2: '2',\n  answer3: '3',\n  answer4: '5',\n  correct: 1\n}, {\n  question: \"Josef\",\n  time: 20,\n  answer1: 'M',\n  answer2: '2',\n  answer3: '3',\n  answer4: '5',\n  correct: 2\n}];\n\nfunction App() {\n  const [headerName, setHeaderName] = useState('');\n  useEffect(() => {\n    fetch('http://0.0.0.0:8000/').then(response => response.json()).then(json => {\n      console.log(json);\n      setHeaderName(json.Hello);\n    }).catch(error => {\n      console.error(error);\n    });\n  });\n\n  const handleUploadFile = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = function (e) {\n      const contents = e.target.result;\n      console.log('cont ', contents);\n      fetch('http://0.0.0.0:8000/interrogate', {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify({\n          data: contents\n        })\n      });\n    };\n\n    reader.readAsText(file);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    className: \"App-logo\",\n    alt: \"logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ExcelFile, {\n    element: \"custom-file-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ExcelSheet, {\n    data: dataSet1,\n    name: \"Organization\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Question - max 120 characters\",\n    value: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Answer 1 - max 75 characters\",\n    value: \"answer1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Answer 2 - max 75 characters\",\n    value: \"answer2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Answer 3 - max 75 characters\",\n    value: \"answer3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Answer 4 - max 75 characters\",\n    value: \"answer4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Time limit (sec) \\u2013 5, 10, 20, 30, 60, 90, 120, or 240 secs\",\n    value: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(ExcelColumn, {\n    label: \"Correct answer(s) - choose at least one\",\n    value: \"correct\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"file-upload\",\n    className: \"custom-file-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-cloud-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), \" Custom Upload\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"file-upload\",\n    type: \"file\",\n    onChange: handleUploadFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/larsandre/Projects/interrogate/src/App.js"],"names":["React","useEffect","useState","logo","ReactExport","ExcelFile","ExcelSheet","ExcelColumn","dataSet1","question","time","answer1","answer2","answer3","answer4","correct","App","headerName","setHeaderName","fetch","then","response","json","console","log","Hello","catch","error","handleUploadFile","event","file","target","files","reader","FileReader","onload","e","contents","result","method","headers","body","JSON","stringify","data","readAsText"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport logo from './assets/images/kahoot_messenger.png'\nimport './App.css';\n\nimport ReactExport from \"react-export-excel\";\n\nconst ExcelFile = ReactExport.ExcelFile;\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\n\nconst dataSet1 = [\n  {\n    question: \"Josef\",\n    time: 20,\n      answer1: 'M',\n      answer2: '2',\n      answer3: '3',\n      answer4: '5',\n      correct: 1\n  },\n  {\n    question: \"Josef\",\n    time: 20,\n      answer1: 'M',\n      answer2: '2',\n      answer3: '3',\n      answer4: '5',\n      correct: 2\n  }\n];\n\n\n\nfunction App() {\n  const [ headerName, setHeaderName ] = useState('')\n  useEffect(()=> {\n    fetch('http://0.0.0.0:8000/')\n    .then((response) => response.json())\n    .then((json) => {\n      console.log(json);\n      setHeaderName(json.Hello)\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n  })\n  const handleUploadFile = (event) =>{\n    const file = event.target.files[0]\n\n    const reader = new FileReader();\n    reader.onload = function(e) {\n      const contents = e.target.result;\n      console.log('cont ', contents);\n\n      fetch('http://0.0.0.0:8000/interrogate', {\n        method: 'POST',\n        headers: {\n          'accept': 'application/json',\n          'content-type': 'application/json',\n        },\n        body: JSON.stringify(({\n          data: contents\n        }))\n      })\n    };\n    reader.readAsText(file);\n\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <ExcelFile  element={\"custom-file-upload\"}>\n              <ExcelSheet data={dataSet1} name=\"Organization\">\n                  <ExcelColumn label=\"Question - max 120 characters\" value=\"question\"/>\n                  <ExcelColumn label=\"Answer 1 - max 75 characters\" value=\"answer1\"/>\n                  <ExcelColumn label=\"Answer 2 - max 75 characters\" value=\"answer2\"/>\n                  <ExcelColumn label=\"Answer 3 - max 75 characters\" value=\"answer3\"/>\n                  <ExcelColumn label=\"Answer 4 - max 75 characters\" value=\"answer4\"/>\n                  <ExcelColumn label=\"Time limit (sec) – 5, 10, 20, 30, 60, 90, 120, or 240 secs\" value=\"time\"/>\n                  <ExcelColumn label=\"Correct answer(s) - choose at least one\" value=\"correct\"/>\n              </ExcelSheet>\n          </ExcelFile>\n        <label htmlFor=\"file-upload\" className=\"custom-file-upload\">\n        <i className=\"fa fa-cloud-upload\"></i> Custom Upload\n        </label>\n        <input id=\"file-upload\" type=\"file\" onChange={handleUploadFile}/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}